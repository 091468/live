name: Daily Python Script
on:
  schedule:
    # 北京时间每天凌晨2点 (UTC时间18点)
    - cron: '0 18 * * *'
  workflow_dispatch:  # 允许手动触发

jobs:
  execute-script:
    runs-on: ubuntu-latest
    timeout-minutes: 30  # 设置超时时间
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'  # 指定Python版本

    - name: Cache Python dependencies
      uses: actions/cache@v3
      id: cache
      with:
        path: |
          ~/.cache/pip
          venv/
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        python -m venv venv
        source venv/bin/activate
        pip install --upgrade pip
        pip install -r requirements.txt

    - name: Execute Python script
      run: |
        # 显式切换到仓库根目录
        cd "${{ github.workspace }}"
        echo "切换后目录: $(pwd)"
        ls -al

        # 激活虚拟环境
        source venv/bin/activate

        # 执行脚本（确保路径正确）
        python new.py
        python m3u.py

        # 检查文件是否生成
        echo "执行后文件列表:"
        ls -al
        
        cd "${{ github.workspace }}"
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git add iptv.m3u  # 替换为你的文件名
        git add iptv_all.xlsx  # 替换为你的文件名
        git commit -m "Auto-generated file by GitHub Actions"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # 自动使用工作流权限